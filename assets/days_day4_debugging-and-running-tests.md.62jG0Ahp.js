import{_ as e,o as t,c as n,R as a}from"./chunks/framework.12sTq0AG.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"days/day4/debugging-and-running-tests.md","filePath":"days/day4/debugging-and-running-tests.md","lastUpdated":1694832500000}'),s={name:"days/day4/debugging-and-running-tests.md"},i=a('<h2 id="debugging-and-running-tests" tabindex="-1">Debugging and Running Tests <a class="header-anchor" href="#debugging-and-running-tests" aria-label="Permalink to &quot;Debugging and Running Tests&quot;">â€‹</a></h2><p>Ok now that we have our hands dirty and I semi forced you guys to create some tests without knowing how to debug, lets learn a little bit about how to debug tests</p><p>One of the best and recommended ways is to use the VS Code extension. There is a full video on this as well as a section in the documentation biome on this. which can be found <a href="https://www.documentation-biome.xyz/additions/playwright-extension" target="_blank" rel="noreferrer">HERE!</a> ðŸ§™ðŸ§™ðŸ§™</p><h2 id="without-the-extension" tabindex="-1">Without the extension. <a class="header-anchor" href="#without-the-extension" aria-label="Permalink to &quot;Without the extension.&quot;">â€‹</a></h2><p>Without the extension we can still run in debug mode by using</p><p><code>npx playwright test --debug</code> Which will run all of our tests one by one in debug mode</p><h3 id="running-a-single-test" tabindex="-1">Running a single test <a class="header-anchor" href="#running-a-single-test" aria-label="Permalink to &quot;Running a single test&quot;">â€‹</a></h3><p>You can also run just a single test with with npx playwright test <strong>spec file</strong> --debug</p><p><code>npx playwright test text-input.spec.js --debug</code></p>',9),o=[i];function d(r,u,g,h,l,c){return t(),n("div",null,o)}const _=e(s,[["render",d]]);export{b as __pageData,_ as default};
