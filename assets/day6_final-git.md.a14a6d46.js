import{_ as s,o as a,c as n,e}from"./app.c6b4f9ec.js";const b=JSON.parse('{"title":"Final Git Lesson with diff tool, alias and forking","description":"","frontmatter":{},"headers":[],"relativePath":"day6/final-git.md","lastUpdated":1671654410000}'),o={name:"day6/final-git.md"},l=e(`<h1 id="final-git-lesson-with-diff-tool-alias-and-forking" tabindex="-1">Final Git Lesson with diff tool, alias and forking <a class="header-anchor" href="#final-git-lesson-with-diff-tool-alias-and-forking" aria-hidden="true">#</a></h1><p>for our final Git lesson were going to look at diff, difftool, alias&#39;s and forking repos</p><p>Lets start with alias&#39;s. In git we can write our own shorthand alias&#39;s to save us some typing. More often than not ill mistype a git command and have to redo it. so lets shorten some of our commands</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git config --global alias.co checkout</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global alias.br branch</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global alias.ci commit</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global alias.st status</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>now instead of using</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git checkout -b </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">branchname</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>we can use the shorthand of</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git co -b </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">branchname</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>For me this is great, I use git status incredibly often, and I honestly mistype it often as statys. so now I can check the status easier by using git st which is much quicker as well.</p><p>There are a ton more you can do with this, and I encourage you to to look up some of the awesome alias&#39;s people have made to add some extra added productivity to your day!</p><p>Now lets check out some git diff tools</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#A6ACCD;">git diff</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>looking through this we can see there was an update that states</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line diff remove"><span style="color:#A6ACCD;">Give examples </span></span>
<span class="line diff add"><span style="color:#A6ACCD;">Test </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>this looks fine, but if there were tons more changes, this would be pretty terrible to look through. Thats why so many people use GUI diff tools. or</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#A6ACCD;">git difftool</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>now if yours states &quot;Launch &#39;vimdiff&#39; [Y/n]? &quot; Then lets go ahead and set it up to where we use VSCode for out default diff tool. and for this we need to set 2 configurations</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#A6ACCD;">git config --global diff.tool vscode</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>were going to use --wait and --diff</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#A6ACCD;">git config --global difftool.vscode.cmd </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code --wait --diff </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">LOCAL</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">REMOTE</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>$LOCAL and $REMOTE are in all caps and represents the old and new copies of the files</p><p>now lets make sure everything is set up properly</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git config --global -e</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>Your config should look similar to this, and if not you can copy and paste what i have and add it in</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	email = gober.jonathan@gmail.com </span></span>
<span class="line"><span style="color:#A6ACCD;">	name = Jonathan Gober </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">core</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	editor = code --wait </span></span>
<span class="line"><span style="color:#A6ACCD;">	autocrlf = </span><span style="color:#82AAFF;">true</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">diff</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	tool = vscode </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">difftool </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vscode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	cmd = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">code --wait --diff </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">LOCAL</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">REMOTE</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">alias</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	co = checkout </span></span>
<span class="line"><span style="color:#A6ACCD;">	br = branch </span></span>
<span class="line"><span style="color:#A6ACCD;">	ci = commit </span></span>
<span class="line"><span style="color:#A6ACCD;">	st = status</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>Now with our Diff toll updated we can run and see how it looks in VSCODE. This looks much easier to read as we can see a side by side difference for our code.</p><p>Alright. there is one final thing that id like to show you with repositories and that&#39;s forking.</p><p>Forking allows you to freely evaluate and experiment with changes without damaging the main repository. So when you forking someone elses repo, it is an exact replica of that repository.</p><p>People do this to propose changes to someone else&#39;s project or to have a good starting point for their own project. For example, Playwright itself is a fork of another automation tool called puppeteer. Which we can also fork the entire code of playwright as well</p><p><a href="https://github.com/microsoft/playwright-vscode" target="_blank" rel="noreferrer">https://github.com/microsoft/playwright-vscode</a></p><p>Now that the code is forked, we can make whatever updates to playwright and submit pull requests to the main repository to be accepted as updates.</p><p>for now however, im going to delete this repo, and were going to dive right into api testing coming up next. So your next test is to Fork a copy of the poke-api that is on my repo, run a npm install, then run the test.</p><p>If you have joined our discord server let me know what starter pokemon you received!</p><p>but well done on git! and ill see you in tomorrow with api testing</p>`,34),p=[l];function t(i,r,c,d,u,h){return a(),n("div",null,p)}const f=s(o,[["render",t]]);export{b as __pageData,f as default};
