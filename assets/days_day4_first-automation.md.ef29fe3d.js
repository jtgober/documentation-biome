import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.f4487b77.js";const l="/documentation-biome/hellosampleapp.png",o="/documentation-biome/codegendemo.png",m=JSON.parse('{"title":"First Playwright Automation","description":"","frontmatter":{},"headers":[],"relativePath":"days/day4/first-automation.md","filePath":"days/day4/first-automation.md","lastUpdated":1694649954000}'),t={name:"days/day4/first-automation.md"},p=e('<h1 id="first-playwright-automation" tabindex="-1">First Playwright Automation <a class="header-anchor" href="#first-playwright-automation" aria-label="Permalink to &quot;First Playwright Automation&quot;">​</a></h1><p>alright lets get into some automating! for the majority of this course we will be using the following: <a href="http://www.uitestingplayground.com/" target="_blank" rel="noreferrer">http://www.uitestingplayground.com/</a>. So lets be good engineers and check out the website.</p><p>Specifically, lets check on the sample app link.</p><h2 id="sample-app" tabindex="-1">Sample app <a class="header-anchor" href="#sample-app" aria-label="Permalink to &quot;Sample app&quot;">​</a></h2><p>Within the sample app it looks to be a simple login script. We can use any username here, and <code>pwd</code> as the password</p><p><img src="'+l+'" alt=""></p><h2 id="automation-playground-codegen" tabindex="-1">Automation Playground Codegen <a class="header-anchor" href="#automation-playground-codegen" aria-label="Permalink to &quot;Automation Playground Codegen&quot;">​</a></h2><p>Lets take a look at playwrights code generation tool</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">playwright</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">codegen</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uitestingplayground.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">playwright</span><span style="color:#24292E;"> </span><span style="color:#032F62;">codegen</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uitestingplayground.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>using this command brings up the website, and we can click on various things to generate code from the code inspector. also, you can change to any language.</p><p><img src="'+o+`" alt=""></p><p>Although it is a good tool. it isn&#39;t without faults. finding everything by text isn&#39;t the best way to go about finding elements. there are better locators to use. lets take a look at a page and open our dev tools.</p><h2 id="element-selector-examples" tabindex="-1">Element Selector Examples <a class="header-anchor" href="#element-selector-examples" aria-label="Permalink to &quot;Element Selector Examples&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Although this information is still accurate, We should try for the new locators types when applicable</p></div><table><thead><tr><th>Element Selectors</th><th style="text-align:center;">how to select in playwright (symbol)</th><th style="text-align:center;">example</th></tr></thead><tbody><tr><td>CSS Selector Class</td><td style="text-align:center;">.</td><td style="text-align:center;">page.click(&#39;.btn-primary&#39;);</td></tr><tr><td>CSS Selector ID</td><td style="text-align:center;">#</td><td style="text-align:center;">page.click(&#39;#btn-primary&#39;);</td></tr><tr><td>By Text</td><td style="text-align:center;">text=</td><td style="text-align:center;">page.click(&#39;text=Button&#39;);</td></tr><tr><td>By Xpath</td><td style="text-align:center;">xpath=</td><td style="text-align:center;">page.click(&#39;xpath=//button&#39;);</td></tr></tbody></table><p>the main one to use would be by ID if it is available, because id&#39;s are unique, and don&#39;t have duplicates on a page. However, if you have a dynamic id, it will change every time on page load, and should not be used.</p><h2 id="new-locator-types" tabindex="-1">New locator Types <a class="header-anchor" href="#new-locator-types" aria-label="Permalink to &quot;New locator Types&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A list of the new best practice locators</p></div><ul><li><code>page.getByRole()</code> to locate by explicit and implicit accessibility attributes.</li><li><code>page.getByText()</code> to locate by text content.</li><li><code>page.getByLabel()</code> to locate a form control by associated label&#39;s text.</li><li><code>page.getByPlaceholder()</code> to locate an input by placeholder.</li><li><code>page.getByAltText()</code> to locate an element, usually image, by its text alternative.</li><li><code>page.getByTitle()</code> to locate an element by its title attribute.</li><li><code>page.getByTestId()</code>to locate an element based on its data-testid attribute (other attributes can be configured).</li></ul><h2 id="the-problem-with-code-gen" tabindex="-1">The problem with code-gen <a class="header-anchor" href="#the-problem-with-code-gen" aria-label="Permalink to &quot;The problem with code-gen&quot;">​</a></h2><p>Although the selectors here are good, there are a couple of issues</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { test, expect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// expect isn&#39;t being used</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">goto</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://uitestingplayground.com/&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Sample App&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User Name&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// not needed</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User Name&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ol</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;"> greg&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;********&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// not needed</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;********&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;pwd&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;button&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Log In&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Welcome, ol</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;"> greg!&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// not an expect statement </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;button&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Log Out&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;User logged out.&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// not an expect statement </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { test, expect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// expect isn&#39;t being used</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">goto</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://uitestingplayground.com/&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Sample App&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;User Name&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// not needed</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;User Name&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ol</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;"> greg&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;********&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// not needed</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;********&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;pwd&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;button&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Log In&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Welcome, ol</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;"> greg!&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// not an expect statement </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;button&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Log Out&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;User logged out.&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// not an expect statement </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Not to mention none of these are <code>reusable</code></p><p>We need to make sure we build reusable and stable tests early so we can build our scenarios</p>`,24),c=[p];function r(y,i,E,d,g,h){return a(),n("div",null,c)}const F=s(t,[["render",r]]);export{m as __pageData,F as default};
