import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.cb0d0652.js";const F=JSON.parse('{"title":"Global Setup","description":"","frontmatter":{},"headers":[],"relativePath":"additions/global-setup.md","filePath":"additions/global-setup.md","lastUpdated":1694144259000}'),l={name:"additions/global-setup.md"},e=p(`<h1 id="global-setup" tabindex="-1">Global Setup <a class="header-anchor" href="#global-setup" aria-label="Permalink to &quot;Global Setup&quot;">​</a></h1><p>Ok were gonna get a little fancy now (and more advanced) here and create a global setup using <code>Project Dependencies</code></p><p>According to the playwright.dev docs</p><blockquote><p>&quot;Project dependencies are a list of projects that need to run before the tests in another project run. They can be useful for configuring the global setup actions so that one project depends on this running first. Using dependencies allows global setup to produce traces and other artifacts.&quot;</p></blockquote><p>And thats exactly what we are going to create here.</p><h2 id="initial-set-up" tabindex="-1">Initial set up <a class="header-anchor" href="#initial-set-up" aria-label="Permalink to &quot;Initial set up&quot;">​</a></h2><p>We&#39;re going to create yet another project from scratch. Go ahead and use whichever method you prefer <code>npm init playwright@latest</code> or utilize the Playwright extension.</p><p>We are also going to utilize a real site for this, in particular: the <a href="https://en.wikipedia.org/wiki/Main_Page" target="_blank" rel="noreferrer">wikipedia site</a>. So before beginning <a href="https://en.wikipedia.org/w/index.php?title=Special:CreateAccount&amp;returnto=Main+Page" target="_blank" rel="noreferrer">create an account</a></p><p>Also lets install dotenv <code>npm i dotenv</code> and then create a .env file with our username and password</p><h2 id="getting-started-with-global-setup" tabindex="-1">Getting Started with global setup <a class="header-anchor" href="#getting-started-with-global-setup" aria-label="Permalink to &quot;Getting Started with global setup&quot;">​</a></h2><p>Now that we have playwright installed, and a Wikipedia Log in its time to get started with creating our global-setup.</p><p>Lets create a file called <code>global-setup.js</code> or <code>global-setup.ts</code> if using typescript</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-19pA8" id="tab-MkVG0oX" checked="checked"><label for="tab-MkVG0oX">global-setup.ts</label><input type="radio" name="group-19pA8" id="tab-6izzlic"><label for="tab-6izzlic">global-setup.js</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { test </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> setup, expect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;do login&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">goto</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Log in&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your username&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.username</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your password&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.password</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">context</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">storageState</span><span style="color:#E1E4E8;">({ path: </span><span style="color:#9ECBFF;">&quot;./userauth.json&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { test </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> setup, expect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;do login&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">goto</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Log in&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your username&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.username</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your password&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.password</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">context</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">storageState</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&quot;./userauth.json&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { test </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> setup, expect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;do login&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">goto</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Log in&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your username&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.username);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your password&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.password);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">context</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">storageState</span><span style="color:#E1E4E8;">({ path: </span><span style="color:#9ECBFF;">&quot;./userauth.json&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { test </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> setup, expect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;do login&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">goto</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Log in&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your username&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.username);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your password&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.password);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">context</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">storageState</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&quot;./userauth.json&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The only difference here between ts and js is the <code>!</code> at the end of the p<wbr>rocess.env.user/pass</p></div><p>Now lets walk through this code -</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { test </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> setup, expect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// This line imports the test function from the library and assigns it the alias setup. This is done for convenience, allowing you to use setup instead of test in the code.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;do login&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// the use of setup instead of test is used here</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">goto</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Log in&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your username&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.username);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByPlaceholder</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Enter your password&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(p<wbr>rocess.env.password);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the above code logs into Wikipedia using our creds</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">context</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">storageState</span><span style="color:#E1E4E8;">({ path: </span><span style="color:#9ECBFF;">&quot;./userauth.json&quot;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//This captures the storage state of the page (e.g., cookies, local storage) and saves it to a file named &quot;userauth.json&quot; in the current directory.</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { test </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> setup, expect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// This line imports the test function from the library and assigns it the alias setup. This is done for convenience, allowing you to use setup instead of test in the code.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;do login&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// the use of setup instead of test is used here</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">goto</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Log in&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your username&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.username);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByPlaceholder</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Enter your password&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(p<wbr>rocess.env.password);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// the above code logs into Wikipedia using our creds</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">context</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">storageState</span><span style="color:#24292E;">({ path: </span><span style="color:#032F62;">&quot;./userauth.json&quot;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//This captures the storage state of the page (e.g., cookies, local storage) and saves it to a file named &quot;userauth.json&quot; in the current directory.</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="updating-the-playwright-config" tabindex="-1">Updating the playwright.config <a class="header-anchor" href="#updating-the-playwright-config" aria-label="Permalink to &quot;Updating the playwright.config&quot;">​</a></h2><p>First we need to setup dotenv</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Nsp7q" id="tab-URv4lUX" checked="checked"><label for="tab-URv4lUX">before</label><input type="radio" name="group-Nsp7q" id="tab-V9w0irm"><label for="tab-V9w0irm">after</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//playwright.config.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineConfig, devices } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Read environment variables from file.</span></span>
<span class="line"><span style="color:#6A737D;"> * https://github.com/motdotla/dotenv</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// require(&#39;dotenv&#39;).config(); un-comment this </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * See https://playwright.dev/docs/test-configuration.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#6A737D;">//playwright.config.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineConfig, devices } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Read environment variables from file.</span></span>
<span class="line"><span style="color:#6A737D;"> * https://github.com/motdotla/dotenv</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// require(&#39;dotenv&#39;).config(); un-comment this </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * See https://playwright.dev/docs/test-configuration.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//playwright.config.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineConfig, devices } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Read environment variables from file.</span></span>
<span class="line"><span style="color:#6A737D;"> * https://github.com/motdotla/dotenv</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;dotenv&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">config</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * See https://playwright.dev/docs/test-configuration.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#6A737D;">//playwright.config.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineConfig, devices } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Read environment variables from file.</span></span>
<span class="line"><span style="color:#6A737D;"> * https://github.com/motdotla/dotenv</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;dotenv&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">config</span><span style="color:#24292E;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * See https://playwright.dev/docs/test-configuration.</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><p>Next lets Scroll down to the <code>projects</code> section. I&#39;m going to go ahead and remove webkit and firefox</p><p>Now lets create a new project</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">projects</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&#39;setup&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// can be named anything you&#39;d like</span></span>
<span class="line"><span style="color:#E1E4E8;">      testDir: </span><span style="color:#9ECBFF;">&#39;./&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// sincewe have testDir: &#39;./tests&#39;, within our config, we specify the global-setup location</span></span>
<span class="line"><span style="color:#E1E4E8;">      testMatch: </span><span style="color:#9ECBFF;">&#39;global-setup.ts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// could ue regex - but just add your global setup file here</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">projects</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;setup&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// can be named anything you&#39;d like</span></span>
<span class="line"><span style="color:#24292E;">      testDir: </span><span style="color:#032F62;">&#39;./&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// sincewe have testDir: &#39;./tests&#39;, within our config, we specify the global-setup location</span></span>
<span class="line"><span style="color:#24292E;">      testMatch: </span><span style="color:#032F62;">&#39;global-setup.ts&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// could ue regex - but just add your global setup file here</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Now we should have our setup nearly complete. Lets update the <code>chromium</code> project so we can utilize the setup.</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">projects</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&#39;setup&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      testDir: </span><span style="color:#9ECBFF;">&#39;./&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">      testMatch: </span><span style="color:#9ECBFF;">&#39;global-setup.ts&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      name: </span><span style="color:#9ECBFF;">&#39;chromium&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      dependencies: [</span><span style="color:#9ECBFF;">&#39;setup&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// this shows we are depend on the setup script outlined above. </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      use: { </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">devices[</span><span style="color:#9ECBFF;">&#39;Desktop Chrome&#39;</span><span style="color:#E1E4E8;">], </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      storageState: </span><span style="color:#9ECBFF;">&quot;./userauth.json&quot;</span><span style="color:#E1E4E8;"> }, </span><span style="color:#6A737D;">// user our storage state cookies for log in next time! </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">projects</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;setup&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      testDir: </span><span style="color:#032F62;">&#39;./&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">      testMatch: </span><span style="color:#032F62;">&#39;global-setup.ts&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      name: </span><span style="color:#032F62;">&#39;chromium&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line has-focus"><span style="color:#24292E;">      dependencies: [</span><span style="color:#032F62;">&#39;setup&#39;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// this shows we are depend on the setup script outlined above. </span></span>
<span class="line has-focus"><span style="color:#24292E;">      use: { </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">devices[</span><span style="color:#032F62;">&#39;Desktop Chrome&#39;</span><span style="color:#24292E;">], </span></span>
<span class="line has-focus"><span style="color:#24292E;">      storageState: </span><span style="color:#032F62;">&quot;./userauth.json&quot;</span><span style="color:#24292E;"> }, </span><span style="color:#6A737D;">// user our storage state cookies for log in next time! </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Now all that is left is creating a test</p><h2 id="creating-a-test" tabindex="-1">Creating a test <a class="header-anchor" href="#creating-a-test" aria-label="Permalink to &quot;Creating a test&quot;">​</a></h2><p>For this I have a quick test prepared that utilizes the search bar</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//search-wiki.spec.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { test, expect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@playwright/test&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">test.</span><span style="color:#B392F0;">beforeEach</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">goto</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// before running each test go to the wiki main page</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: NO LOGIN SCRIPTS</span></span>
<span class="line"><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Search for Frida Kahlo&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Wikipedia&#39;</span><span style="color:#E1E4E8;">, exact: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByLabel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Search Wikipedia&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Frida Kahlo&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;combobox&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Search Wikipedia&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;button&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Search&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;heading&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Frida Kahlo&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">locator</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;span&#39;</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">toContainText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Frida Kahlo&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: NO LOGIN SCRIPTS</span></span>
<span class="line"><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Search for Stone Cold Steve Austin&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> ({ </span><span style="color:#FFAB70;">page</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByLabel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Search Wikipedia&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">fill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;link&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;button&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Search&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(page.</span><span style="color:#B392F0;">getByRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;heading&#39;</span><span style="color:#E1E4E8;">, { name: </span><span style="color:#9ECBFF;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#E1E4E8;"> }).</span><span style="color:#B392F0;">locator</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;span&#39;</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">toContainText</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Steve Austin&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//search-wiki.spec.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { test, expect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@playwright/test&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">test.</span><span style="color:#6F42C1;">beforeEach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">goto</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;https://en.wikipedia.org/wiki/Main_Page&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// before running each test go to the wiki main page</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: NO LOGIN SCRIPTS</span></span>
<span class="line"><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Search for Frida Kahlo&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Wikipedia&#39;</span><span style="color:#24292E;">, exact: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByLabel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Search Wikipedia&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Frida Kahlo&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;combobox&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Search Wikipedia&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;button&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Search&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;heading&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Frida Kahlo&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">locator</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;span&#39;</span><span style="color:#24292E;">)).</span><span style="color:#6F42C1;">toContainText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Frida Kahlo&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// NOTE: NO LOGIN SCRIPTS</span></span>
<span class="line"><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Search for Stone Cold Steve Austin&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> ({ </span><span style="color:#E36209;">page</span><span style="color:#24292E;"> }) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByLabel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Search Wikipedia&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">fill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;link&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;button&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Search&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(page.</span><span style="color:#6F42C1;">getByRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;heading&#39;</span><span style="color:#24292E;">, { name: </span><span style="color:#032F62;">&#39;Stone Cold Steve Austin&#39;</span><span style="color:#24292E;"> }).</span><span style="color:#6F42C1;">locator</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;span&#39;</span><span style="color:#24292E;">)).</span><span style="color:#6F42C1;">toContainText</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Steve Austin&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>now if we run the above tests, the global setup script will run first, and create our <code>./userauth.json</code> which will auto log into wikipedia for us</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>creating more tests in the tests folder will also allow you to continue using that login. but make sure to run <code>npx playwright test</code> ive noticed the plugin running with 1 worker and the ui mode only running the global setup script.</p></div><p>Awesome stuff! Keep on learning and i hope this helps! 🧙</p>`,31),o=[e];function t(r,c,i,y,E,u){return a(),n("div",null,o)}const g=s(l,[["render",t]]);export{F as __pageData,g as default};
