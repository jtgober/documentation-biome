import{_ as a,o as s,c as e,h as n}from"./app.cb142f9d.js";const m=JSON.parse('{"title":"Cloning, Branching (Checkout -b), merging, stashing","description":"","frontmatter":{},"headers":[],"relativePath":"days/day6/cloning-branching.md","lastUpdated":1673638586000}'),t={name:"days/day6/cloning-branching.md"},o=n(`<h1 id="cloning-branching-checkout-b-merging-stashing" tabindex="-1">Cloning, Branching (Checkout -b), merging, stashing <a class="header-anchor" href="#cloning-branching-checkout-b-merging-stashing" aria-hidden="true">#</a></h1><p>Oh No! all of our code is deleted!</p><p>good thing that we have all of our code backed up in github. So I&#39;m going to create a folder called &quot;git-repos&quot; and clone our code to that folder</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/jtgober/playwright.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>great! now we have all of our code back. lets dive back into learning more about GIT.</p><p>first of all I think its a good idea to start talking about branches and why they are important. Having a good branching strategy can help teams move fast. branches can be used as an indicator to a snapshot of your changes. For automation developers, I think this is less important, unless you are working with a large team of automation engineers, who are all working on automating different features. however, one thing I do think is important, is making sure that the main branch is always in a working state. The end goal for automation, should be to run it in a CI/CD environment, and if the main branch is broken due to a silly change, its possibly that all of your automation wont run either. So Whenever making a change, its always important to make sure the stability of the main branch is not being compromised.</p><p>So to start, lets make a new branch and check it out by using the following command</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature/test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>we can also view all branches by using</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>now that we have a new branch created, im going to go ahead and create a couple of files, and prepare to push them out.</p><p>when we perform a push, it doesn&#39;t know exactly where to go, because we haven&#39;t set the origin, luckily, git gives us a hand with the exact command we can use.</p><p>Now we can take a look at what we have accomplished in both github and in our local environment.</p><p>there is also 2 ways that we can go about combining the feature branch with the main branch. for now lets do it through our command line.</p><p>first we need to check out our main branch and then, do a merge pointed at the feature/test branch</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">merge</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature/test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>great! we just merge all of the code over to our main branch. Now lets look at another scenario.</p><p>lets checkout feature/test again and im going to create a file3</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">feature/test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>lets pretend for a moment that we are working on file3 and something comes up and we need to immediately work on something different / or we just arent ready to commit these changes yet. Well, we can stash the changes and get them later. so lets stash away file3</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>this will temporarily store modified, tracked files in order to change branches</p><p>now we can create yet another new file &quot;file4&quot; and do what we need on here, commit and push it out. then bring back our work by doing a git stash pop.</p><p>but first lets do a list</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>here we see our stashed file that can be brought back</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pop</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>for learning sake lets stash that file3 again and we can discard it entirely by using git stash drop.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">drop</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,29),l=[o];function i(p,r,c,h,d,u){return s(),e("div",null,l)}const b=a(t,[["render",i]]);export{m as __pageData,b as default};
