import{_ as i,o as t,c as e,R as s}from"./chunks/framework.IIdmP75A.js";const u=JSON.parse('{"title":"Playwright Locators and Strategies","description":"","frontmatter":{},"headers":[],"relativePath":"days/day4/selecting-locators.md","filePath":"days/day4/selecting-locators.md","lastUpdated":1694965062000}'),a={name:"days/day4/selecting-locators.md"},l=s(`<h1 id="playwright-locators-and-strategies" tabindex="-1">Playwright Locators and Strategies <a class="header-anchor" href="#playwright-locators-and-strategies" aria-label="Permalink to &quot;Playwright Locators and Strategies&quot;">​</a></h1><p>This information can also be found on the <a href="https://playwright.dev/docs/locators#quick-guide" target="_blank" rel="noreferrer">playwright.dev site</a></p><div class="tip custom-block"><p class="custom-block-title">When to use role locators</p><p>Give preference to role locators when locating elements, as it closely mirrors the way users and assistive technology interpret the page</p></div><p>These are the recommended built in locators.</p><ul><li><code>page.getByRole()</code> to locate by explicit and implicit accessibility attributes.</li><li><code>page.getByText()</code> to locate by text content.</li><li><code>page.getByLabel()</code> to locate a form control by associated label&#39;s text.</li><li><code>page.getByPlaceholder()</code> to locate an input by placeholder.</li><li><code>page.getByAltText()</code> to locate an element, usually image, by its text alternative.</li><li><code>page.getByTitle()</code> to locate an element by its title attribute.</li><li><code>page.getByTestId()</code> to locate an element based on its data-testid attribute (other attributes can be configured).</li></ul><h2 id="getbyrole" tabindex="-1">getByRole() <a class="header-anchor" href="#getbyrole" aria-label="Permalink to &quot;getByRole()&quot;">​</a></h2><p>According to the playwright docs</p><blockquote><p>The <code>page.getByRole()</code> locator reflects how users and assistive technology perceive the page, for example whether some element is a button or a checkbox. When locating by role, you should usually pass the accessible name as well, so that the locator pinpoints the exact element.</p></blockquote><p>Role locators include<code> buttons, checkboxes, headings, links, lists, tables, and many more</code> Note that many html elements like <code>button</code> have an implicitly defined role that is recognized by the role locator.</p><details class="details custom-block"><summary>Full list of roles we can target</summary><ul><li>alert</li><li>alertdialog</li><li>application</li><li>article</li><li>banner</li><li>blockquote</li><li>button</li><li>caption</li><li>cell</li><li>checkbox</li><li>code</li><li>columnheader</li><li>combobox</li><li>complementary</li><li>contentinfo</li><li>definition</li><li>deletion</li><li>dialog</li><li>directory</li><li>document</li><li>emphasis</li><li>feed</li><li>figure</li><li>form</li><li>generic</li><li>grid</li><li>gridcell</li><li>group</li><li>heading</li><li>img</li><li>insertion</li><li>link</li><li>list</li><li>listbox</li><li>listitem</li><li>log</li><li>main</li><li>marquee</li><li>math</li><li>meter</li><li>menu</li><li>menubar</li><li>menuitem</li><li>menuitemcheckbox</li><li>menuitemradio</li><li>navigation</li><li>none</li><li>note</li><li>option</li><li>paragraph</li><li>presentation</li><li>progressbar</li><li>radio</li><li>radiogroup</li><li>region</li><li>row</li><li>rowgroup</li><li>rowheader</li><li>scrollbar</li><li>search</li><li>searchbox</li><li>separator</li><li>slider</li><li>spinbutton</li><li>status</li><li>strong</li><li>subscript</li><li>superscript</li><li>switch</li><li>tab</li><li>table</li><li>tablist</li><li>tabpanel</li><li>term</li><li>textbox</li><li>time</li><li>timer</li><li>toolbar</li><li>tooltip</li><li>tree</li><li>treegrid</li><li>treeitem</li></ul></details><h2 id="page-getbytext" tabindex="-1">page.getByText() <a class="header-anchor" href="#page-getbytext" aria-label="Permalink to &quot;page.getByText()&quot;">​</a></h2><p>Find an element by the text it contains. You can match by a substring, exact string, or a regular expression when using page.getByText().</p><div class="tip custom-block"><p class="custom-block-title">When to use text locators</p><p>Use text locators to find non interactive elements like div, span, p, etc.</p></div><p>You can locate the element by the text it contains:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Welcome, John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBeVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Set an exact match:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Welcome, John&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { exact: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBeVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Match with a regular expression:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">welcome, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[A-Za-z]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBeVisible</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="page-getbylabel" tabindex="-1">page.getByLabel() <a class="header-anchor" href="#page-getbylabel" aria-label="Permalink to &quot;page.getByLabel()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When to use get by label</p><p>Use this locator when locating form fields.</p></div><p>Most form elements typically come with specific labels that can be conveniently utilized for interacting with the form.</p><h2 id="page-getbyplaceholder" tabindex="-1">page.getByPlaceholder() <a class="header-anchor" href="#page-getbyplaceholder" aria-label="Permalink to &quot;page.getByPlaceholder()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When to use get by placeholder</p><p>Input fields often feature a placeholder attribute, which serves as a subtle clue to users regarding the expected input value.</p></div><p>Perfect example of this was on the <a href="http://uitestingplayground.com/sampleapp" target="_blank" rel="noreferrer">sample-app page</a> within the textbox</p><h2 id="page-getbyalttext" tabindex="-1">page.getByAltText() <a class="header-anchor" href="#page-getbyalttext" aria-label="Permalink to &quot;page.getByAltText()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When to use get by alt text</p><p>Use this locator when your element supports alt text such as img and area elements.</p></div><p><code>&lt;img alt=&quot;playwright logo&quot; src=&quot;/img/playwright-logo.svg&quot; width=&quot;100&quot; /&gt;</code></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByAltText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;playwright logo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="page-getbytitle" tabindex="-1">page.getByTitle() <a class="header-anchor" href="#page-getbytitle" aria-label="Permalink to &quot;page.getByTitle()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When to use get by title</p><p>Use this locator when your element has the <code>title</code> attribute.</p></div><p><code>&lt;span title=&#39;Issues count&#39;&gt;25 issues&lt;/span&gt;</code></p><p>You can check the issues count after locating it by the title text:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTitle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Issues count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toHaveText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;25 issues&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="page-getbytestid" tabindex="-1">page.getByTestId() <a class="header-anchor" href="#page-getbytestid" aria-label="Permalink to &quot;page.getByTestId()&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When to use get by test id</p><p>You can also use test ids when you choose to use the test id methodology or when you can&#39;t locate by role or text</p></div><p>Testing by test ids is the most resilient way of testing as even if your text or role of the attribute changes the test will still pass.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Communicate with dev teams to set up this practice. Or ask if QE can add them to the elements</p></div><h2 id="locate-by-css-or-xpath" tabindex="-1">Locate by CSS or Xpath <a class="header-anchor" href="#locate-by-css-or-xpath" aria-label="Permalink to &quot;Locate by CSS or Xpath&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">When using CSS or XPATH</p><p>you can use page.locator() to create a locator that takes a selector describing how to find an element in the page.</p></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;css=button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xpath=//button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;//button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><table><thead><tr><th>Element Selectors</th><th style="text-align:center;">how to select in playwright (symbol)</th><th style="text-align:center;">example</th></tr></thead><tbody><tr><td>CSS Selector Class</td><td style="text-align:center;">.</td><td style="text-align:center;">page.locator(&#39;.btn-primary&#39;);</td></tr><tr><td>CSS Selector ID</td><td style="text-align:center;">#</td><td style="text-align:center;">page.locator(&#39;#btn-primary&#39;);</td></tr><tr><td>By Text</td><td style="text-align:center;">text=</td><td style="text-align:center;">page.locator(&#39;text=Button&#39;);</td></tr><tr><td>By Xpath</td><td style="text-align:center;">xpath=</td><td style="text-align:center;">page.locator(&#39;xpath=//button&#39;);</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">When to use CSS or XPATH</p><p>It&#39;s not advisable to rely on CSS and XPath because the DOM structure can frequently change, causing tests to become less reliable. Instead, consider using locators that align closely with the way users view the page, such as role locators, or establish a clear testing agreement by defining unique test IDs.</p></div>`,43),n=[l];function o(p,h,r,c,d,k){return t(),e("div",null,n)}const y=i(a,[["render",o]]);export{u as __pageData,y as default};
