import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.cb0d0652.js";const v=JSON.parse('{"title":"Using p​rocess.env.VARIABLES in our local environment","description":"","frontmatter":{},"headers":[],"relativePath":"days/day9/local-env.md","filePath":"days/day9/local-env.md","lastUpdated":1677707074000}'),o={name:"days/day9/local-env.md"},l=n(`<h1 id="using-process-env-variables-in-our-local-environment" tabindex="-1">Using p<wbr>rocess.env.VARIABLES in our local environment <a class="header-anchor" href="#using-process-env-variables-in-our-local-environment" aria-label="Permalink to &quot;Using p&lt;wbr&gt;rocess.env.VARIABLES in our local environment&quot;">​</a></h1><p>Don&#39;t worry this one with be quick</p><p>So in the last video we explored creating environment variables to be used in Github, and we attached them to our tests in our sample app. But now we have a small problem. If we want to run our tests locally now, they will fail because we don&#39;t have those variables defined on our local machine. There are a few ways to fix this. we <em>could</em> add a <code>ternary</code> operator or an <code>if</code> statement like we do in the config file. However there is a better cleaner way. There is a package we can download that allows us to use environment variables in our code, similar to how we are using them in github. That package is <code>dotenv</code></p><h2 id="downloading-dotenv" tabindex="-1">Downloading dotenv <a class="header-anchor" href="#downloading-dotenv" aria-label="Permalink to &quot;Downloading dotenv&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dotenv</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dotenv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="configuring-dotenv" tabindex="-1">configuring dotenv <a class="header-anchor" href="#configuring-dotenv" aria-label="Permalink to &quot;configuring dotenv&quot;">​</a></h3><p>first we need to create a <code>.env</code> file in the root of your project:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">USERNAME=&quot;Gojo&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">PASSWORD=&quot;pwd&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">USERNAME=&quot;Gojo&quot;</span></span>
<span class="line"><span style="color:#24292e;">PASSWORD=&quot;pwd&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>After creating a <code>.env</code> file with the username and password fields we can go back to our <code>sample-app.spec.js</code> and add the following lines</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line has-focus"><span style="color:#6A737D;">// sample-app.spec.js </span></span>
<span class="line has-focus"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> dotenv </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;dotenv&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">dotenv.</span><span style="color:#B392F0;">config</span><span style="color:#E1E4E8;">() </span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> username </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p<wbr>rocess.env.</span><span style="color:#79B8FF;">USERNAME</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> password </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> p<wbr>rocess.env.</span><span style="color:#79B8FF;">PASSWORD</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line has-focus"><span style="color:#6A737D;">// sample-app.spec.js </span></span>
<span class="line has-focus"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> dotenv </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;dotenv&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line has-focus"><span style="color:#24292E;">dotenv.</span><span style="color:#6F42C1;">config</span><span style="color:#24292E;">() </span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> username </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p<wbr>rocess.env.</span><span style="color:#005CC5;">USERNAME</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> password </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> p<wbr>rocess.env.</span><span style="color:#005CC5;">PASSWORD</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>with that completed we&#39;re now back in a working condition!</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">playwright</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sample-app.spec.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">playwright</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sample-app.spec.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>You can also view environment variables from the code by adding a <code>console.log(p<wbr>rocess.env)</code> in the code.</p><h2 id="update-gitignore" tabindex="-1">Update .gitignore!!!! <a class="header-anchor" href="#update-gitignore" aria-label="Permalink to &quot;Update .gitignore!!!!&quot;">​</a></h2><p>The last thing to do, is to ensure that we do not send this out to the repo. otherwise it will ruin all that trouble we went into making those github secrets</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">node_modules/</span></span>
<span class="line"><span style="color:#e1e4e8;">/test-results/</span></span>
<span class="line"><span style="color:#e1e4e8;">/playwright-report/</span></span>
<span class="line"><span style="color:#e1e4e8;">/playwright/.cache/</span></span>
<span class="line"><span style="color:#e1e4e8;">.env</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">node_modules/</span></span>
<span class="line"><span style="color:#24292e;">/test-results/</span></span>
<span class="line"><span style="color:#24292e;">/playwright-report/</span></span>
<span class="line"><span style="color:#24292e;">/playwright/.cache/</span></span>
<span class="line"><span style="color:#24292e;">.env</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,16),p=[l];function t(r,c,i,d,u,h){return a(),e("div",null,p)}const b=s(o,[["render",t]]);export{v as __pageData,b as default};
